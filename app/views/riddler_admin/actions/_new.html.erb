<%= form_with model: @action, scope: "ra_action" do |f| %>
  <% if @action.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@action.errors.count, "error") %> prohibited this action from being saved:</h2>

      <ul>
        <% @action.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="card" style="margin-bottom: 32px;">
    <div class="card-body">

      <div class="card-title">
        <h5>New <%= @action.short_name %> Action</h5>
      </div>

      <%= f.hidden_field :id %>
      <%= f.hidden_field :type %>
      <%= f.hidden_field :actionable_type %>
      <%= f.hidden_field :actionable_id %>

      <div class="form-group">
        <div class="form-row">
          <div class="col">
            <%= f.label :name %>
            <%= f.text_field :name, class: "form-control" %>
            <small class="form-text text-muted">Cannot start with a capital letter or a number. Clients can use this for custom rendering.</small>
          </div>

          <div class="col">
            <%= f.label :transition_type %>
            <%= f.select :transition_type, options_for_select([["Enter", "enter"], ["Exit", "exit"]], @action.transition_type), {}, class:"form-control" %>
          </div>

          <div class="col">
            <%= f.label :include_predicate %>
            <%= f.text_field :include_predicate, class: "form-control", placeholder: "e.g. params.user_id is present" %>
            <small class="form-text text-muted">Use data from the context that evaluates to <code>true</code> or <code>false</code></small>
          </div>
        </div>

        <%= render partial: @action.to_partial_path("form"), locals: { f: f, action: @action } %>

        <%= f.submit "Add action", class: "btn btn-primary" %>
      </div>
    </div>
  </div>
<% end %>
</div>
